# -*- coding: utf-8 -*-
"""housing price forcasting.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DzHCQen0YyOScqrAKqxo02m8c3FJLC70
"""

import pandas as pd
df=pd.read_csv("train.csv")
train_df=df[["GrLivArea","YearBuilt","SalePrice"]]
train_df

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import *
import matplotlib.pyplot as plt
# %matplotlib inline

x=train_df[['GrLivArea','YearBuilt']].values
y=train_df['SalePrice'].values
x_train,x_test,y_train, y_test= train_test_split(x,y)
print(x_train.shape,x_test.shape,y_train.shape,y_test.shape)

reg=LinearRegression().fit(x_train,y_train)
reg_predict= reg.predict(x_test)
pd.DataFrame([reg_predict,y_test])

print("Mean Squared Error :",mean_squared_error(y_test,reg_predict))

def plot_graph(xlabel,ylabel,x,y_true,y_pred):
    plt.title('visualization between'+ xlabel+ 'and' +ylabel)
    plt.xlabel(xlabel)
    plt.ylabel(ylabel)
    plt.scatter(x,y_true,label='true value')
    plt.scatter(x,y_pred, label='predicted values')
    plt.legend()
    plt.show()

plot_graph('GrLivArea','SalePrice',x_test[:,0],y_test,reg_predict)

plot_graph('YearBuilt','SalePrice',x_test[:,1],y_test,reg_predict)

from sklearn.svm import SVR
from sklearn.tree import DecisionTreeRegressor
from sklearn.ensemble import RandomForestRegressor

svr=SVR()
svr.fit(x_train,y_train)
svr_predict=svr.predict(x_test)
print("Mean Squared Error :",mean_squared_error(y_test,reg_predict))

plot_graph('GrLivArea','SalePrice',x_test[:,0],y_test,svr_predict)

plot_graph('YearBuilt','SalePrice',x_test[:,1],y_test,svr_predict)

d_tree=DecisionTreeRegressor()
d_tree.fit(x_train,y_train)
d_tree_predict=d_tree.predict(x_test)
print("Mean Squared Error :",mean_squared_error(y_test,d_tree_predict))

plot_graph('GrLivArea','SalePrice',x_test[:,0],y_test,d_tree_predict)

plot_graph('YearBuilt','SalePrice',x_test[:,1],y_test,d_tree_predict)

rand_forest=RandomForestRegressor()
rand_forest.fit(x_train,y_train)
rand_forest_predict=rand_forest.predict(x_test)
print("Mean Squared Error :",mean_squared_error(y_test,rand_forest_predict))

plot_graph('GrLivArea','SalePrice',x_test[:,0],y_test,rand_forest_predict)

plot_graph('YearBuilt','SalePrice',x_test[:,1],y_test,rand_forest_predict)

train_df2=df[["GrLivArea","YearBuilt","SalePrice","LotArea","YrSold"]]
train_df2

x=train_df2[['GrLivArea','YearBuilt','LotArea','YrSold']].values
y=train_df2['SalePrice'].values
x_train,x_test,y_train, y_test= train_test_split(x,y)
# print(x_train.shape,x_test.shape,y_train.shape,y_test.shape)

reg=LinearRegression().fit(x_train,y_train)
reg_predict= reg.predict(x_test)
pd.DataFrame([reg_predict,y_test])

plot_graph('GrLivArea','SalePrice',x_test[:,0],y_test,reg_predict)

plot_graph('YearBuilt','SalePrice',x_test[:,1],y_test,reg_predict)

plot_graph('LotArea','SalePrice',x_test[:,2],y_test,reg_predict)

plot_graph('YrSold','SalePrice',x_test[:,3],y_test,reg_predict)

svr=SVR()
svr.fit(x_train,y_train)
svr_predict=svr.predict(x_test)
print("Mean Squared Error :",mean_squared_error(y_test,reg_predict))

plot_graph('GrLivArea','SalePrice',x_test[:,0],y_test,svr_predict)

plot_graph('YearBuilt','SalePrice',x_test[:,1],y_test,svr_predict)

plot_graph('LotArea','SalePrice',x_test[:,2],y_test,svr_predict)

plot_graph('YrSold','SalePrice',x_test[:,3],y_test,reg_predict)

d_tree=DecisionTreeRegressor()
d_tree.fit(x_train,y_train)
d_tree_predict=d_tree.predict(x_test)
print("Mean Squared Error :",mean_squared_error(y_test,d_tree_predict))

plot_graph('GrLivArea','SalePrice',x_test[:,0],y_test,d_tree_predict)

plot_graph('YearBuilt','SalePrice',x_test[:,1],y_test,d_tree_predict)

plot_graph('LotArea','SalePrice',x_test[:,2],y_test,d_tree_predict)

plot_graph('YrSold','SalePrice',x_test[:,3],y_test,d_tree_predict)

rand_forest=RandomForestRegressor()
rand_forest.fit(x_train,y_train)
rand_forest_predict=rand_forest.predict(x_test)
print("Mean Squared Error :",mean_squared_error(y_test,rand_forest_predict))

plot_graph('GrLivArea','SalePrice',x_test[:,0],y_test,rand_forest_predict)

plot_graph('YearBuilt','SalePrice',x_test[:,0],y_test,rand_forest_predict)

plot_graph('LotArea','SalePrice',x_test[:,2],y_test,rand_forest_predict)

plot_graph('Yrsold','SalePrice',x_test[:,3],y_test,rand_forest_predict)

